syntax = "proto3";

package order;

option go_package = "github.com/tuannm99/podzone/pkg/api/proto/order";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
// import "google/protobuf/empty.proto";

// OrderService handles order operations
service OrderService {
  // CreateOrder creates a new order
  rpc CreateOrder(CreateOrderRequest) returns (Order) {
    option (google.api.http) = {
      post: "/api/v1/orders"
      body: "*"
    };
  }

  // GetOrder retrieves an order by ID
  rpc GetOrder(GetOrderRequest) returns (Order) {
    option (google.api.http) = {
      get: "/api/v1/orders/{id}"
    };
  }

  // ListOrders lists orders for the current user
  rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse) {
    option (google.api.http) = {
      get: "/api/v1/orders"
    };
  }

  // CancelOrder cancels an order
  rpc CancelOrder(CancelOrderRequest) returns (Order) {
    option (google.api.http) = {
      post: "/api/v1/orders/{id}/cancel"
      body: "*"
    };
  }

  // UpdateOrderStatus updates an order's status (admin/staff only)
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (Order) {
    option (google.api.http) = {
      patch: "/api/v1/admin/orders/{id}/status"
      body: "*"
    };
  }

  // AddOrderNote adds a note to an order
  rpc AddOrderNote(AddOrderNoteRequest) returns (Order) {
    option (google.api.http) = {
      post: "/api/v1/orders/{id}/notes"
      body: "*"
    };
  }

  // ListAllOrders lists all orders (admin/staff only)
  rpc ListAllOrders(ListAllOrdersRequest) returns (ListOrdersResponse) {
    option (google.api.http) = {
      get: "/api/v1/admin/orders"
    };
  }

  // GetOrdersByCustomer gets orders for a specific customer (admin/staff only)
  rpc GetOrdersByCustomer(GetOrdersByCustomerRequest) returns (ListOrdersResponse) {
    option (google.api.http) = {
      get: "/api/v1/admin/customers/{customer_id}/orders"
    };
  }

  // CreateRefund creates a refund for an order (admin/staff only)
  rpc CreateRefund(CreateRefundRequest) returns (Refund) {
    option (google.api.http) = {
      post: "/api/v1/admin/orders/{order_id}/refunds"
      body: "*"
    };
  }

  // GetOrderRefunds gets all refunds for an order
  rpc GetOrderRefunds(GetOrderRefundsRequest) returns (ListRefundsResponse) {
    option (google.api.http) = {
      get: "/api/v1/orders/{order_id}/refunds"
    };
  }
}

// OrderStatus defines the status of an order
enum OrderStatus {
  ORDER_STATUS_UNSPECIFIED = 0;
  ORDER_STATUS_PENDING = 1;
  ORDER_STATUS_PROCESSING = 2;
  ORDER_STATUS_COMPLETED = 3;
  ORDER_STATUS_CANCELLED = 4;
  ORDER_STATUS_REFUNDED = 5;
  ORDER_STATUS_FAILED = 6;
  ORDER_STATUS_ON_HOLD = 7;
  ORDER_STATUS_SHIPPED = 8;
  ORDER_STATUS_DELIVERED = 9;
}

// PaymentStatus defines the payment status of an order
enum PaymentStatus {
  PAYMENT_STATUS_UNSPECIFIED = 0;
  PAYMENT_STATUS_PENDING = 1;
  PAYMENT_STATUS_COMPLETED = 2;
  PAYMENT_STATUS_FAILED = 3;
  PAYMENT_STATUS_REFUNDED = 4;
  PAYMENT_STATUS_PARTIALLY_REFUNDED = 5;
}

// Order represents an order
message Order {
  string id = 1;
  string user_id = 2;
  string order_number = 3;
  OrderStatus status = 4;
  PaymentStatus payment_status = 5;
  string currency = 6;
  repeated OrderItem items = 7;
  OrderTotals totals = 8;
  BillingAddress billing_address = 9;
  ShippingAddress shipping_address = 10;
  ShippingInfo shipping_info = 11;
  PaymentInfo payment_info = 12;
  repeated OrderCoupon coupons = 13;
  repeated OrderNote notes = 14;
  Customer customer = 15;
  google.protobuf.Timestamp created_at = 16;
  google.protobuf.Timestamp updated_at = 17;
  google.protobuf.Timestamp completed_at = 18;
  map<string, string> metadata = 19;
}

// OrderItem represents a line item in an order
message OrderItem {
  string id = 1;
  string product_id = 2;
  string name = 3;
  string sku = 4;
  int32 quantity = 5;
  double unit_price = 6;
  double subtotal = 7;
  double discount = 8;
  double total = 9;
  string image_url = 10;
  map<string, string> attributes = 11;
}

// OrderTotals represents the order's totals
message OrderTotals {
  double subtotal = 1;
  double discount_total = 2;
  double tax_total = 3;
  double shipping_total = 4;
  double grand_total = 5;
  int32 items_count = 6;
  int32 items_quantity = 7;
}

// BillingAddress represents a billing address
message BillingAddress {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string phone = 4;
  string address_line1 = 5;
  string address_line2 = 6;
  string city = 7;
  string state = 8;
  string postal_code = 9;
  string country = 10;
  string company = 11;
}

// ShippingAddress represents a shipping address
message ShippingAddress {
  string first_name = 1;
  string last_name = 2;
  string phone = 3;
  string address_line1 = 4;
  string address_line2 = 5;
  string city = 6;
  string state = 7;
  string postal_code = 8;
  string country = 9;
  string company = 10;
  string delivery_notes = 11;
}

// ShippingInfo represents shipping information
message ShippingInfo {
  string carrier = 1;
  string method = 2;
  string tracking_number = 3;
  string tracking_url = 4;
  double cost = 5;
  string estimated_delivery = 6;
}

// PaymentInfo represents payment information
message PaymentInfo {
  string provider = 1;
  string method = 2;
  string transaction_id = 3;
  string status = 4;
  double amount = 5;
  string currency = 6;
  google.protobuf.Timestamp paid_at = 7;
  map<string, string> metadata = 8;
}

// OrderCoupon represents a coupon applied to an order
message OrderCoupon {
  string code = 1;
  string type = 2;
  double value = 3;
  double discount_amount = 4;
  string description = 5;
}

// OrderNote represents a note on an order
message OrderNote {
  string id = 1;
  string content = 2;
  string author = 3;
  bool is_customer_visible = 4;
  google.protobuf.Timestamp created_at = 5;
}

// Customer represents customer information
message Customer {
  string id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  string phone = 5;
}

// Refund represents a refund for an order
message Refund {
  string id = 1;
  string order_id = 2;
  double amount = 3;
  string reason = 4;
  string transaction_id = 5;
  string status = 6;
  bool is_partial = 7;
  repeated RefundItem items = 8;
  string notes = 9;
  string created_by = 10;
  google.protobuf.Timestamp created_at = 11;
}

// RefundItem represents an item in a refund
message RefundItem {
  string order_item_id = 1;
  int32 quantity = 2;
  double amount = 3;
  string reason = 4;
}

// CreateOrderRequest is used to create an order
message CreateOrderRequest {
  string cart_id = 1;
  BillingAddress billing_address = 2;
  ShippingAddress shipping_address = 3;
  string shipping_method_id = 4;
  string payment_method_id = 5;
  map<string, string> payment_metadata = 6;
  string notes = 7;
}

// GetOrderRequest is used to retrieve an order by ID
message GetOrderRequest {
  string id = 1;
}

// ListOrdersRequest is used to list orders for the current user
message ListOrdersRequest {
  int32 page = 1;
  int32 page_size = 2;
  string sort_by = 3;
  bool sort_desc = 4;
  OrderStatus status = 5;
}

// ListOrdersResponse contains a list of orders
message ListOrdersResponse {
  repeated Order orders = 1;
  int32 total = 2;
  int32 page = 3;
  int32 page_size = 4;
  int32 total_pages = 5;
}

// CancelOrderRequest is used to cancel an order
message CancelOrderRequest {
  string id = 1;
  string reason = 2;
}

// UpdateOrderStatusRequest is used to update an order's status
message UpdateOrderStatusRequest {
  string id = 1;
  OrderStatus status = 2;
  string notes = 3;
  string tracking_number = 4;
  string tracking_url = 5;
}

// AddOrderNoteRequest is used to add a note to an order
message AddOrderNoteRequest {
  string id = 1;
  string content = 2;
  bool is_customer_visible = 3;
}

// ListAllOrdersRequest is used to list all orders (admin/staff only)
message ListAllOrdersRequest {
  int32 page = 1;
  int32 page_size = 2;
  string sort_by = 3;
  bool sort_desc = 4;
  OrderStatus status = 5;
  string search = 6;
  google.protobuf.Timestamp start_date = 7;
  google.protobuf.Timestamp end_date = 8;
  string customer_id = 9;
  double min_total = 10;
  double max_total = 11;
}

// GetOrdersByCustomerRequest is used to get orders for a specific customer
message GetOrdersByCustomerRequest {
  string customer_id = 1;
  int32 page = 2;
  int32 page_size = 3;
  string sort_by = 4;
  bool sort_desc = 5;
  OrderStatus status = 6;
}

// CreateRefundRequest is used to create a refund for an order
message CreateRefundRequest {
  string order_id = 1;
  double amount = 2;
  string reason = 3;
  repeated RefundItem items = 4;
  string notes = 5;
}

// GetOrderRefundsRequest is used to get all refunds for an order
message GetOrderRefundsRequest {
  string order_id = 1;
}

// ListRefundsResponse contains a list of refunds
message ListRefundsResponse {
  repeated Refund refunds = 1;
  double total_refunded = 2;
}
