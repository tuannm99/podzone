{
  "swagger": "2.0",
  "info": {
    "title": "user/user.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/admin/users": {
      "get": {
        "summary": "ListUsers lists all users (admin only)",
        "operationId": "UserService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "roleFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ROLE_UNSPECIFIED",
              "ROLE_USER",
              "ROLE_ADMIN",
              "ROLE_STAFF"
            ],
            "default": "ROLE_UNSPECIFIED"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/admin/users/{id}": {
      "get": {
        "summary": "GetUser retrieves a user by ID (admin only)",
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "summary": "DeleteUser deletes a user (admin only)",
        "operationId": "UserService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "put": {
        "summary": "UpdateUser updates a user's information (admin only)",
        "operationId": "UserService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserServiceUpdateUserBody"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/users/change-password": {
      "post": {
        "summary": "ChangePassword changes the user's password",
        "operationId": "UserService_ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/users/login": {
      "post": {
        "summary": "Login authenticates a user and returns tokens",
        "operationId": "UserService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userLoginRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/users/logout": {
      "post": {
        "summary": "Logout invalidates the user's tokens",
        "operationId": "UserService_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userLogoutRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/users/profile": {
      "get": {
        "summary": "GetProfile retrieves the user's profile",
        "operationId": "UserService_GetProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserService"
        ]
      },
      "put": {
        "summary": "UpdateProfile updates a user's profile information",
        "operationId": "UserService_UpdateProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userUpdateProfileRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/users/refresh-token": {
      "post": {
        "summary": "RefreshToken refreshes the access token using a refresh token",
        "operationId": "UserService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userRefreshTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userRefreshTokenRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/users/register": {
      "post": {
        "summary": "Register creates a new user account",
        "operationId": "UserService_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userRegisterRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "UserServiceUpdateUserBody": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/userRole"
        },
        "active": {
          "type": "boolean"
        }
      },
      "title": "UpdateUserRequest is used to update a user (admin only)"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "userChangePasswordRequest": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "title": "ChangePasswordRequest is used to change a user's password"
    },
    "userListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/userUser"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ListUsersResponse contains a list of users"
    },
    "userLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "LoginRequest is used to authenticate a user"
    },
    "userLoginResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string"
        },
        "expiresIn": {
          "type": "string",
          "format": "int64"
        },
        "user": {
          "$ref": "#/definitions/userUser"
        }
      },
      "title": "LoginResponse contains authentication tokens and user information"
    },
    "userLogoutRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      },
      "title": "LogoutRequest is used to logout a user"
    },
    "userRefreshTokenRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      },
      "title": "RefreshTokenRequest is used to refresh an access token"
    },
    "userRefreshTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string"
        },
        "expiresIn": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "RefreshTokenResponse contains new authentication tokens"
    },
    "userRegisterRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      },
      "title": "RegisterRequest is used to register a new user"
    },
    "userRole": {
      "type": "string",
      "enum": [
        "ROLE_UNSPECIFIED",
        "ROLE_USER",
        "ROLE_ADMIN",
        "ROLE_STAFF"
      ],
      "default": "ROLE_UNSPECIFIED",
      "title": "Role defines user roles"
    },
    "userUpdateProfileRequest": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "profileImageUrl": {
          "type": "string"
        }
      },
      "title": "UpdateProfileRequest is used to update a user's profile"
    },
    "userUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/userRole"
        },
        "active": {
          "type": "boolean"
        },
        "profileImageUrl": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "User represents a user in the system"
    },
    "userUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/userUser"
        }
      },
      "title": "UserResponse contains user information"
    }
  }
}
