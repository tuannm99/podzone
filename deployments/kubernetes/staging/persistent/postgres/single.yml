apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 20Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: 'postgres'
            - name: POSTGRES_PASSWORD
              value: 'postgres'
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: pgadmin
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: pgadmin
#   template:
#     metadata:
#       labels:
#         app: pgadmin
#     spec:
#       containers:
#         - name: pgadmin
#           image: dpage/pgadmin4:latest
#           ports:
#             - containerPort: 80
#           env:
#             - name: PGADMIN_DEFAULT_EMAIL
#               value: "admin@dev.com"
#             - name: PGADMIN_DEFAULT_PASSWORD
#               value: "admin123"
# 
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: pgadmin
# spec:
#   type: ClusterIP
#   selector:
#     app: pgadmin
#   ports:
#     - port: 80
#       targetPort: 80
# 
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: pgadmin-ingress
#   annotations:
#     nginx.ingress.kubernetes.io/ssl-redirect: 'false'
#     nginx.ingress.kubernetes.io/ssl-passthrough: 'true'
#     nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
#     nginx.ingress.kubernetes.io/use-forwarded-headers: 'true'
#     cert-manager.io/cluster-issuer: 'letsencrypt-staging'
#     acme.cert-manager.io/http01-ingress-class: nginx
# spec:
#   ingressClassName: nginx
#   tls:
#     - hosts:
#         - pgadmin.tuannm.uk
#       secretName: pgadmin-tls
#   rules:
#     - host: pgadmin.tuannm.uk
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: pgadmin
#                 port:
#                   number: 80
