// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import (
	entity "github.com/tuannm99/podzone/internal/auth/domain/entity"

	mock "github.com/stretchr/testify/mock"
)

// MockTokenUsecase is an autogenerated mock type for the TokenUsecase type
type MockTokenUsecase struct {
	mock.Mock
}

type MockTokenUsecase_Expecter struct {
	mock *mock.Mock
}

func (_m *MockTokenUsecase) EXPECT() *MockTokenUsecase_Expecter {
	return &MockTokenUsecase_Expecter{mock: &_m.Mock}
}

// CreateJwtToken provides a mock function with given fields: user
func (_m *MockTokenUsecase) CreateJwtToken(user entity.User) (string, error) {
	ret := _m.Called(user)

	if len(ret) == 0 {
		panic("no return value specified for CreateJwtToken")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(entity.User) (string, error)); ok {
		return rf(user)
	}
	if rf, ok := ret.Get(0).(func(entity.User) string); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(entity.User) error); ok {
		r1 = rf(user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockTokenUsecase_CreateJwtToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateJwtToken'
type MockTokenUsecase_CreateJwtToken_Call struct {
	*mock.Call
}

// CreateJwtToken is a helper method to define mock.On call
//   - user entity.User
func (_e *MockTokenUsecase_Expecter) CreateJwtToken(user interface{}) *MockTokenUsecase_CreateJwtToken_Call {
	return &MockTokenUsecase_CreateJwtToken_Call{Call: _e.mock.On("CreateJwtToken", user)}
}

func (_c *MockTokenUsecase_CreateJwtToken_Call) Run(run func(user entity.User)) *MockTokenUsecase_CreateJwtToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(entity.User))
	})
	return _c
}

func (_c *MockTokenUsecase_CreateJwtToken_Call) Return(_a0 string, _a1 error) *MockTokenUsecase_CreateJwtToken_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockTokenUsecase_CreateJwtToken_Call) RunAndReturn(run func(entity.User) (string, error)) *MockTokenUsecase_CreateJwtToken_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockTokenUsecase creates a new instance of MockTokenUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTokenUsecase(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTokenUsecase {
	mock := &MockTokenUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
